INFO 03-28 09:27:04 llm_engine.py:87] Initializing an LLM engine with config: model='EleutherAI/pythia-1.4b', tokenizer='/network/scratch/p/prakhar.ganesh/pythia-1.4b/step100000/', tokenizer_mode=auto, revision=step100000, tokenizer_revision=None, trust_remote_code=True, dtype=torch.float16, max_seq_len=2048, download_dir='/network/scratch/p/prakhar.ganesh/pythia-1.4b/step100000/', load_format=auto, tensor_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, device_config=cuda, seed=0)
INFO 03-28 09:27:09 weight_utils.py:163] Using model weights format ['*.bin']
INFO 03-28 09:27:15 llm_engine.py:357] # GPU blocks: 12525, # CPU blocks: 1365
INFO 03-28 09:27:18 model_runner.py:684] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 03-28 09:27:18 model_runner.py:688] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 03-28 09:27:22 model_runner.py:756] Graph capturing finished in 4 secs.
    reading sizes...
    reading pointers...
    reading document index...
    creating numpy buffer of mmap...
    creating memory view of numpy buffer...
INFO 03-28 09:46:47 llm_engine.py:87] Initializing an LLM engine with config: model='EleutherAI/pythia-1.4b', tokenizer='/network/scratch/p/prakhar.ganesh/pythia-1.4b/step100000/', tokenizer_mode=auto, revision=step100000, tokenizer_revision=None, trust_remote_code=True, dtype=torch.float16, max_seq_len=2048, download_dir='/network/scratch/p/prakhar.ganesh/pythia-1.4b/step100000/', load_format=auto, tensor_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, device_config=cuda, seed=0)
INFO 03-28 09:46:51 weight_utils.py:163] Using model weights format ['*.bin']
INFO 03-28 09:46:56 llm_engine.py:357] # GPU blocks: 12525, # CPU blocks: 1365
INFO 03-28 09:46:59 model_runner.py:684] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 03-28 09:46:59 model_runner.py:688] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 03-28 09:47:03 model_runner.py:756] Graph capturing finished in 4 secs.
    reading sizes...
    reading pointers...
    reading document index...
    creating numpy buffer of mmap...
    creating memory view of numpy buffer...
INFO 03-28 10:09:29 llm_engine.py:87] Initializing an LLM engine with config: model='EleutherAI/pythia-1.4b', tokenizer='/network/scratch/p/prakhar.ganesh/pythia-1.4b/step100000/', tokenizer_mode=auto, revision=step100000, tokenizer_revision=None, trust_remote_code=True, dtype=torch.float16, max_seq_len=2048, download_dir='/network/scratch/p/prakhar.ganesh/pythia-1.4b/step100000/', load_format=auto, tensor_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, device_config=cuda, seed=0)
INFO 03-28 10:09:32 weight_utils.py:163] Using model weights format ['*.bin']
INFO 03-28 10:09:38 llm_engine.py:357] # GPU blocks: 12525, # CPU blocks: 1365
INFO 03-28 10:09:40 model_runner.py:684] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 03-28 10:09:40 model_runner.py:688] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 03-28 10:09:45 model_runner.py:756] Graph capturing finished in 4 secs.
    reading sizes...
    reading pointers...
    reading document index...
    creating numpy buffer of mmap...
    creating memory view of numpy buffer...
INFO 03-28 10:46:11 llm_engine.py:87] Initializing an LLM engine with config: model='EleutherAI/pythia-1.4b', tokenizer='/network/scratch/p/prakhar.ganesh/pythia-1.4b/step100000/', tokenizer_mode=auto, revision=step100000, tokenizer_revision=None, trust_remote_code=True, dtype=torch.float16, max_seq_len=2048, download_dir='/network/scratch/p/prakhar.ganesh/pythia-1.4b/step100000/', load_format=auto, tensor_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, device_config=cuda, seed=0)
INFO 03-28 10:46:15 weight_utils.py:163] Using model weights format ['*.bin']
INFO 03-28 10:46:21 llm_engine.py:357] # GPU blocks: 12525, # CPU blocks: 1365
INFO 03-28 10:46:23 model_runner.py:684] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 03-28 10:46:23 model_runner.py:688] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 03-28 10:46:28 model_runner.py:756] Graph capturing finished in 4 secs.
    reading sizes...
    reading pointers...
    reading document index...
    creating numpy buffer of mmap...
    creating memory view of numpy buffer...

======== GPU REPORT ========

==============NVSMI LOG==============

Timestamp                                 : Thu Mar 28 11:25:43 2024
Driver Version                            : 535.154.05
CUDA Version                              : 12.2

Attached GPUs                             : 1
GPU 00000000:14:00.0
    Accounting Mode                       : Enabled
    Accounting Mode Buffer Size           : 4000
    Accounted Processes
        Process ID                        : 2181945
            GPU Utilization               : 53 %
            Memory Utilization            : 48 %
            Max memory usage              : 41890 MiB
            Time                          : 1180224 ms
            Is Running                    : 0
        Process ID                        : 2185471
            GPU Utilization               : 57 %
            Memory Utilization            : 50 %
            Max memory usage              : 41890 MiB
            Time                          : 1357941 ms
            Is Running                    : 0
        Process ID                        : 2189481
            GPU Utilization               : 66 %
            Memory Utilization            : 56 %
            Max memory usage              : 41890 MiB
            Time                          : 2198457 ms
            Is Running                    : 0
        Process ID                        : 2195975
            GPU Utilization               : 68 %
            Memory Utilization            : 57 %
            Max memory usage              : 41892 MiB
            Time                          : 2371413 ms
            Is Running                    : 0

Thu Mar 28 11:25:43 2024       
+---------------------------------------------------------------------------------------+
| NVIDIA-SMI 535.154.05             Driver Version: 535.154.05   CUDA Version: 12.2     |
|-----------------------------------------+----------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |         Memory-Usage | GPU-Util  Compute M. |
|                                         |                      |               MIG M. |
|=========================================+======================+======================|
|   0  Quadro RTX 8000                On  | 00000000:14:00.0 Off |                    0 |
| 40%   59C    P2             127W / 260W |      1MiB / 46080MiB |    100%      Default |
|                                         |                      |                  N/A |
+-----------------------------------------+----------------------+----------------------+
                                                                                         
+---------------------------------------------------------------------------------------+
| Processes:                                                                            |
|  GPU   GI   CI        PID   Type   Process name                            GPU Memory |
|        ID   ID                                                             Usage      |
|=======================================================================================|
|  No running processes found                                                           |
+---------------------------------------------------------------------------------------+
